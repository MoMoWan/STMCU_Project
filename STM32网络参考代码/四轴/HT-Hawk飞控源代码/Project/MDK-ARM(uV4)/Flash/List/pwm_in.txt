; generated by Component: ARM Compiler 5.06 update 6 (build 750) Tool: ArmCC [4d3637]
; commandline ArmCC [--c99 --list --split_sections -c --asm --interleave -o.\flash\obj\pwm_in.o --asm_dir=.\Flash\List\ --list_dir=.\Flash\List\ --depend=.\flash\obj\pwm_in.d --cpu=Cortex-M3 --apcs=interwork -O0 --diag_suppress=9931 -I..\..\Libraries\CMSIS\CM3\CoreSupport -I..\..\Libraries\CMSIS\CM3\DeviceSupport\ST\STM32F10x -I..\..\Libraries\STM32F10x_StdPeriph_Driver\inc -I..\..\Libraries\STM32_USB-FS-Device_Driver\inc -I..\..\User\usb_virture_com -I..\..\User -I..\..\User\bsp -I..\..\User\Driver\IIC -I..\..\User\Driver\LED -I..\..\User\Driver\TIM -I..\..\User\Driver\SPI -I..\..\User\Driver\ADC -I..\..\User\Driver\Delay -I..\..\User\Driver\UART -I..\..\User\Driver\MOTOR -I..\..\User\Driver\PWM_IN -I..\..\User\Driver\EEPROM -I..\..\User\Modules\Modules_mpu6050 -I..\..\User\Modules\Modules_nrf24L01 -I..\..\User\Modules\Modules_hmc5883 -I..\..\User\Algorithm\Algorithm_filter -I..\..\User\Algorithm\Algorithm_math -I..\..\User\Algorithm\Algorithm_sqLite -I..\..\User\Algorithm\Algorithm_quaternion -I..\..\User\Function\MultiRotor_rc -I..\..\User\Function\MultiRotor_app -I..\..\User\Function\MultiRotor_ahrs -I..\..\User\Function\MultiRotor_radio -I..\..\User\Function\MultiRotor_control -I..\..\User\Modules\Modules_oled -I..\..\User\Driver\STMFLASH -I.\RTE\_Flash -ID:\Keil_v5\ARM\PACK\ARM\CMSIS\5.4.0\CMSIS\Core\Include -ID:\Keil_v5\ARM\PACK\Keil\STM32F1xx_DFP\2.3.0\Device\Include -D__MICROLIB -D__UVISION_VERSION=526 -D_RTE_ -DSTM32F10X_HD -DSTM32F10X_HD -DUSE_STDPERIPH_DRIVER --omf_browse=.\flash\obj\pwm_in.crf ..\..\User\Driver\PWM_IN\pwm_in.c]
                          THUMB

                          AREA ||i.PWM_IN_Config||, CODE, READONLY, ALIGN=2

                  PWM_IN_Config PROC
;;;30     
;;;31     void PWM_IN_Config(void)
000000  b500              PUSH     {lr}
;;;32     {   //【时钟及引脚配置】
000002  b087              SUB      sp,sp,#0x1c
;;;33     	  GPIO_InitTypeDef         GPIO_InitStructure;
;;;34     	  TIM_TimeBaseInitTypeDef  TIM_TimeBaseStructure;
;;;35     	  TIM_ICInitTypeDef  TIM2_ICInitStructure;            //通道模式的结构体不同的结构体可以共用
;;;36     
;;;37     	  RCC_APB1PeriphClockCmd(RCC_APB1Periph_TIM2 | RCC_APB1Periph_TIM3, ENABLE);	 //使能TIM2时钟
000004  2101              MOVS     r1,#1
000006  2003              MOVS     r0,#3
000008  f7fffffe          BL       RCC_APB1PeriphClockCmd
;;;38      	  RCC_APB2PeriphClockCmd(RCC_GPIO_TIM2 | RCC_GPIO_TIM3 |RCC_APB2Periph_GPIOB, ENABLE);  
00000c  2101              MOVS     r1,#1
00000e  200c              MOVS     r0,#0xc
000010  f7fffffe          BL       RCC_APB2PeriphClockCmd
;;;39     
;;;40     	  GPIO_InitStructure.GPIO_Pin  = TIM2_CH1 | TIM2_CH2 | TIM2_CH3 | TIM2_CH4;      //  【TIM2】****【GPIOA-0-1-2-3】        
000014  200f              MOVS     r0,#0xf
000016  f8ad0018          STRH     r0,[sp,#0x18]
;;;41     	  GPIO_InitStructure.GPIO_Mode = GPIO_Mode_IPD;            
00001a  2028              MOVS     r0,#0x28
00001c  f88d001b          STRB     r0,[sp,#0x1b]
;;;42     	  GPIO_Init(GPIO_TIM2, &GPIO_InitStructure);	
000020  a906              ADD      r1,sp,#0x18
000022  4850              LDR      r0,|L1.356|
000024  f7fffffe          BL       GPIO_Init
;;;43     
;;;44           GPIO_InitStructure.GPIO_Pin  = TIM3_CH1 | TIM3_CH2;	
000028  20c0              MOVS     r0,#0xc0
00002a  f8ad0018          STRH     r0,[sp,#0x18]
;;;45     	  GPIO_Init(GPIO_TIM3, &GPIO_InitStructure);	                                 //  【TIM3】****【GPIOA-6-7】
00002e  a906              ADD      r1,sp,#0x18
000030  484c              LDR      r0,|L1.356|
000032  f7fffffe          BL       GPIO_Init
;;;46     	
;;;47     	  GPIO_InitStructure.GPIO_Pin  = GPIO_Pin_0;	
000036  2001              MOVS     r0,#1
000038  f8ad0018          STRH     r0,[sp,#0x18]
;;;48     	  GPIO_Init(GPIOB, &GPIO_InitStructure);	
00003c  a906              ADD      r1,sp,#0x18
00003e  484a              LDR      r0,|L1.360|
000040  f7fffffe          BL       GPIO_Init
;;;49     
;;;50     	  //【时基的初始化】
;;;51     	  TIM_TimeBaseStructure.TIM_Period = 0XFFFF;      //【0XFFFF】     //设定计数器自动重装值 
000044  f64f70ff          MOV      r0,#0xffff
000048  f8ad0010          STRH     r0,[sp,#0x10]
;;;52     	  TIM_TimeBaseStructure.TIM_Prescaler =71; 	                       //预分频器   计数频率 【 1HZ 】
00004c  2047              MOVS     r0,#0x47
00004e  f8ad000c          STRH     r0,[sp,#0xc]
;;;53     	  TIM_TimeBaseStructure.TIM_ClockDivision = TIM_CKD_DIV1;          //设置时钟分割:TDTS = Tck_tim
000052  2000              MOVS     r0,#0
000054  f8ad0012          STRH     r0,[sp,#0x12]
;;;54     	  TIM_TimeBaseStructure.TIM_CounterMode = TIM_CounterMode_Up;      //TIM向上计数模式
000058  f8ad000e          STRH     r0,[sp,#0xe]
;;;55           
;;;56     	  TIM_TimeBaseInit(TIM2, &TIM_TimeBaseStructure); //TIM2           //根据TIM_TimeBaseInitStruct中指定的参数初始化TIMx的时间基数单位
00005c  a903              ADD      r1,sp,#0xc
00005e  f04f4080          MOV      r0,#0x40000000
000062  f7fffffe          BL       TIM_TimeBaseInit
;;;57           TIM_TimeBaseInit(TIM3, &TIM_TimeBaseStructure); //TIM3
000066  a903              ADD      r1,sp,#0xc
000068  4840              LDR      r0,|L1.364|
00006a  f7fffffe          BL       TIM_TimeBaseInit
;;;58           
;;;59     	
;;;60     	  //【通道模式的初始化】
;;;61     	  TIM2_ICInitStructure.TIM_Channel = TIM_Channel_1;                //CC1S=01 	选择输入端 IC1映射到TI1上
00006e  2000              MOVS     r0,#0
000070  f8ad0000          STRH     r0,[sp,#0]
;;;62       	  TIM2_ICInitStructure.TIM_ICPolarity =TIM_ICPolarity_Rising;	   //上升沿捕获
000074  f8ad0002          STRH     r0,[sp,#2]
;;;63       	  TIM2_ICInitStructure.TIM_ICSelection = TIM_ICSelection_DirectTI; //映射到TI1上
000078  2001              MOVS     r0,#1
00007a  f8ad0004          STRH     r0,[sp,#4]
;;;64       	  TIM2_ICInitStructure.TIM_ICPrescaler = TIM_ICPSC_DIV1;	       //配置输入分频,不分频 
00007e  2000              MOVS     r0,#0
000080  f8ad0006          STRH     r0,[sp,#6]
;;;65       	  TIM2_ICInitStructure.TIM_ICFilter = 0x00;                        //IC1F=0000 配置输入滤波器 不滤波
000084  f8ad0008          STRH     r0,[sp,#8]
;;;66       	  TIM_ICInit(TIM2, &TIM2_ICInitStructure);
000088  4669              MOV      r1,sp
00008a  f04f4080          MOV      r0,#0x40000000
00008e  f7fffffe          BL       TIM_ICInit
;;;67     	  TIM_ICInit(TIM3, &TIM2_ICInitStructure);
000092  4669              MOV      r1,sp
000094  4835              LDR      r0,|L1.364|
000096  f7fffffe          BL       TIM_ICInit
;;;68     	
;;;69     	  TIM2_ICInitStructure.TIM_Channel = TIM_Channel_2;                //CC1S=01 	选择输入端 IC1映射到TI1上
00009a  2004              MOVS     r0,#4
00009c  f8ad0000          STRH     r0,[sp,#0]
;;;70       	  TIM2_ICInitStructure.TIM_ICPolarity = TIM_ICPolarity_Rising;	   //上升沿捕获
0000a0  2000              MOVS     r0,#0
0000a2  f8ad0002          STRH     r0,[sp,#2]
;;;71       	  TIM2_ICInitStructure.TIM_ICSelection = TIM_ICSelection_DirectTI; //映射到TI1上
0000a6  2001              MOVS     r0,#1
0000a8  f8ad0004          STRH     r0,[sp,#4]
;;;72       	  TIM2_ICInitStructure.TIM_ICPrescaler = TIM_ICPSC_DIV1;	       //配置输入分频,不分频 
0000ac  2000              MOVS     r0,#0
0000ae  f8ad0006          STRH     r0,[sp,#6]
;;;73       	  TIM2_ICInitStructure.TIM_ICFilter = 0x00;                        //IC1F=0000 配置输入滤波器 不滤波
0000b2  f8ad0008          STRH     r0,[sp,#8]
;;;74       	  TIM_ICInit(TIM2, &TIM2_ICInitStructure);
0000b6  4669              MOV      r1,sp
0000b8  f04f4080          MOV      r0,#0x40000000
0000bc  f7fffffe          BL       TIM_ICInit
;;;75     	  TIM_ICInit(TIM3, &TIM2_ICInitStructure);
0000c0  4669              MOV      r1,sp
0000c2  482a              LDR      r0,|L1.364|
0000c4  f7fffffe          BL       TIM_ICInit
;;;76     		
;;;77     	  TIM2_ICInitStructure.TIM_Channel = TIM_Channel_3;                //CC1S=01 	选择输入端 IC1映射到TI1上
0000c8  2008              MOVS     r0,#8
0000ca  f8ad0000          STRH     r0,[sp,#0]
;;;78       	  TIM2_ICInitStructure.TIM_ICPolarity = TIM_ICPolarity_Rising;	   //上升沿捕获
0000ce  2000              MOVS     r0,#0
0000d0  f8ad0002          STRH     r0,[sp,#2]
;;;79       	  TIM2_ICInitStructure.TIM_ICSelection = TIM_ICSelection_DirectTI; //映射到TI1上
0000d4  2001              MOVS     r0,#1
0000d6  f8ad0004          STRH     r0,[sp,#4]
;;;80       	  TIM2_ICInitStructure.TIM_ICPrescaler = TIM_ICPSC_DIV1;	       //配置输入分频,不分频 
0000da  2000              MOVS     r0,#0
0000dc  f8ad0006          STRH     r0,[sp,#6]
;;;81       	  TIM2_ICInitStructure.TIM_ICFilter = 0x00;                        //IC1F=0000 配置输入滤波器 不滤波
0000e0  f8ad0008          STRH     r0,[sp,#8]
;;;82       	  TIM_ICInit(TIM2, &TIM2_ICInitStructure);
0000e4  4669              MOV      r1,sp
0000e6  f04f4080          MOV      r0,#0x40000000
0000ea  f7fffffe          BL       TIM_ICInit
;;;83     	   
;;;84     		
;;;85     	  TIM2_ICInitStructure.TIM_Channel = TIM_Channel_4;                //CC1S=01 	选择输入端 IC1映射到TI1上
0000ee  200c              MOVS     r0,#0xc
0000f0  f8ad0000          STRH     r0,[sp,#0]
;;;86       	  TIM2_ICInitStructure.TIM_ICPolarity = TIM_ICPolarity_Rising;	   //上升沿捕获
0000f4  2000              MOVS     r0,#0
0000f6  f8ad0002          STRH     r0,[sp,#2]
;;;87       	  TIM2_ICInitStructure.TIM_ICSelection = TIM_ICSelection_DirectTI; //映射到TI1上
0000fa  2001              MOVS     r0,#1
0000fc  f8ad0004          STRH     r0,[sp,#4]
;;;88       	  TIM2_ICInitStructure.TIM_ICPrescaler = TIM_ICPSC_DIV1;	       //配置输入分频,不分频 
000100  2000              MOVS     r0,#0
000102  f8ad0006          STRH     r0,[sp,#6]
;;;89       	  TIM2_ICInitStructure.TIM_ICFilter = 0x00;                        //IC1F=0000 配置输入滤波器 不滤波
000106  f8ad0008          STRH     r0,[sp,#8]
;;;90       	   
;;;91     	
;;;92     	  TIM_Cmd(TIM2,ENABLE ); //使能TIM2 TIM3
00010a  2101              MOVS     r1,#1
00010c  0788              LSLS     r0,r1,#30
00010e  f7fffffe          BL       TIM_Cmd
;;;93     	  TIM_Cmd(TIM3,ENABLE );
000112  2101              MOVS     r1,#1
000114  4815              LDR      r0,|L1.364|
000116  f7fffffe          BL       TIM_Cmd
;;;94     		
;;;95     	  TIM_ITConfig(TIM2, TIM_IT_CC1, ENABLE);        //允许更新中断 ,允许CC1IE捕获中断	
00011a  2201              MOVS     r2,#1
00011c  2102              MOVS     r1,#2
00011e  0748              LSLS     r0,r1,#29
000120  f7fffffe          BL       TIM_ITConfig
;;;96     	  TIM_ITConfig(TIM2, TIM_IT_CC2, ENABLE);
000124  2201              MOVS     r2,#1
000126  2104              MOVS     r1,#4
000128  0708              LSLS     r0,r1,#28
00012a  f7fffffe          BL       TIM_ITConfig
;;;97     	  TIM_ITConfig(TIM2, TIM_IT_CC3, ENABLE);
00012e  2201              MOVS     r2,#1
000130  2108              MOVS     r1,#8
000132  06c8              LSLS     r0,r1,#27
000134  f7fffffe          BL       TIM_ITConfig
;;;98     	  TIM_ITConfig(TIM2, TIM_IT_CC4, ENABLE);	
000138  2201              MOVS     r2,#1
00013a  2110              MOVS     r1,#0x10
00013c  0688              LSLS     r0,r1,#26
00013e  f7fffffe          BL       TIM_ITConfig
;;;99     		
;;;100    	  TIM_ITConfig(TIM3, TIM_IT_CC1, ENABLE);        //允许更新中断 ,允许CC1IE捕获中断	
000142  2201              MOVS     r2,#1
000144  2102              MOVS     r1,#2
000146  4809              LDR      r0,|L1.364|
000148  f7fffffe          BL       TIM_ITConfig
;;;101    	  TIM_ITConfig(TIM3, TIM_IT_CC2, ENABLE);
00014c  2201              MOVS     r2,#1
00014e  2104              MOVS     r1,#4
000150  4806              LDR      r0,|L1.364|
000152  f7fffffe          BL       TIM_ITConfig
;;;102    	  TIM_ITConfig(TIM3, TIM_IT_CC3, ENABLE);
000156  2201              MOVS     r2,#1
000158  2108              MOVS     r1,#8
00015a  4804              LDR      r0,|L1.364|
00015c  f7fffffe          BL       TIM_ITConfig
;;;103    }
000160  b007              ADD      sp,sp,#0x1c
000162  bd00              POP      {pc}
;;;104    /*====================================================================================================*/
                          ENDP

                  |L1.356|
                          DCD      0x40010800
                  |L1.360|
                          DCD      0x40010c00
                  |L1.364|
                          DCD      0x40000400

                          AREA ||i.TIM2_IRQHandler||, CODE, READONLY, ALIGN=2

                  TIM2_IRQHandler PROC
;;;114    //上升沿捕获 下降沿捕获加计算
;;;115    void TIM2_IRQHandler(void)
000000  b510              PUSH     {r4,lr}
;;;116    { 
;;;117        if (TIM_GetITStatus(TIM2, TIM_IT_CC1) != RESET)                             //捕获1发生捕获事件
000002  2102              MOVS     r1,#2
000004  0748              LSLS     r0,r1,#29
000006  f7fffffe          BL       TIM_GetITStatus
00000a  b370              CBZ      r0,|L2.106|
;;;118    		{	
;;;119    			TIM_ClearITPendingBit(TIM2, TIM_IT_CC1);                            //清除中断标志位
00000c  2102              MOVS     r1,#2
00000e  0748              LSLS     r0,r1,#29
000010  f7fffffe          BL       TIM_ClearITPendingBit
;;;120    			if(GPIO_ReadInputDataBit(GPIO_TIM2,TIM2_CH1) == 1)                  //读取IO状态   若TIM2 通道1为高
000014  2101              MOVS     r1,#1
000016  4873              LDR      r0,|L2.484|
000018  f7fffffe          BL       GPIO_ReadInputDataBit
00001c  2801              CMP      r0,#1
00001e  d10a              BNE      |L2.54|
;;;121    			{
;;;122    				  TIM_OC1PolarityConfig(TIM2,TIM_ICPolarity_Falling);	        //CC1P=1 设置为下降沿捕获
000020  2102              MOVS     r1,#2
000022  0780              LSLS     r0,r0,#30
000024  f7fffffe          BL       TIM_OC1PolarityConfig
;;;123                      Rise[0]=TIM_GetCapture1(TIM2);
000028  f04f4080          MOV      r0,#0x40000000
00002c  f7fffffe          BL       TIM_GetCapture1
000030  496d              LDR      r1,|L2.488|
000032  8008              STRH     r0,[r1,#0]
000034  e021              B        |L2.122|
                  |L2.54|
;;;124                 }     //【Rise[0]保存信号高电平起时间】
;;;125    			else 
;;;126    			{     //【Drop[0]保存低电平起时间】
;;;127    				  TIM_OC1PolarityConfig(TIM2,TIM_ICPolarity_Rising);            //CC1P=0 设置为上升沿捕获
000036  2100              MOVS     r1,#0
000038  f04f4080          MOV      r0,#0x40000000
00003c  f7fffffe          BL       TIM_OC1PolarityConfig
;;;128                      Drop[0]=TIM_GetCapture1(TIM2);
000040  f04f4080          MOV      r0,#0x40000000
000044  f7fffffe          BL       TIM_GetCapture1
000048  4968              LDR      r1,|L2.492|
00004a  8008              STRH     r0,[r1,#0]
;;;129    				  if(Rise[0]>Drop[0])  RC_Pwm_In[0] = 65535-Rise[0] + Drop[0];  //计算两次差值考虑是否溢出
00004c  4866              LDR      r0,|L2.488|
00004e  8800              LDRH     r0,[r0,#0]  ; Rise
000050  8809              LDRH     r1,[r1,#0]  ; Drop
000052  4288              CMP      r0,r1
000054  dd0a              BLE      |L2.108|
000056  4864              LDR      r0,|L2.488|
000058  8800              LDRH     r0,[r0,#0]  ; Rise
00005a  f64f71ff          MOV      r1,#0xffff
00005e  1a08              SUBS     r0,r1,r0
000060  4962              LDR      r1,|L2.492|
000062  8809              LDRH     r1,[r1,#0]  ; Drop
000064  4408              ADD      r0,r0,r1
000066  4962              LDR      r1,|L2.496|
000068  8008              STRH     r0,[r1,#0]
                  |L2.106|
00006a  e006              B        |L2.122|
                  |L2.108|
;;;130    					else 	               RC_Pwm_In[0] = Drop[0] - Rise[0];
00006c  485f              LDR      r0,|L2.492|
00006e  8800              LDRH     r0,[r0,#0]  ; Drop
000070  495d              LDR      r1,|L2.488|
000072  8809              LDRH     r1,[r1,#0]  ; Rise
000074  1a40              SUBS     r0,r0,r1
000076  495e              LDR      r1,|L2.496|
000078  8008              STRH     r0,[r1,#0]
                  |L2.122|
;;;131                 }			                                                        //【最终遥控器原始数据被保存到 RC_Pwm_In[0]】 
;;;132    		}	
;;;133    	  
;;;134    	if (TIM_GetITStatus(TIM2, TIM_IT_CC2) != RESET)   //捕获2发生捕获事件
00007a  2104              MOVS     r1,#4
00007c  0708              LSLS     r0,r1,#28
00007e  f7fffffe          BL       TIM_GetITStatus
000082  b370              CBZ      r0,|L2.226|
;;;135    		{	
;;;136    			TIM_ClearITPendingBit(TIM2, TIM_IT_CC2); //清除中断标志位
000084  2104              MOVS     r1,#4
000086  0708              LSLS     r0,r1,#28
000088  f7fffffe          BL       TIM_ClearITPendingBit
;;;137    			if(GPIO_ReadInputDataBit(GPIO_TIM2,TIM2_CH2) == 1) 
00008c  2102              MOVS     r1,#2
00008e  4855              LDR      r0,|L2.484|
000090  f7fffffe          BL       GPIO_ReadInputDataBit
000094  2801              CMP      r0,#1
000096  d10a              BNE      |L2.174|
;;;138    			{
;;;139    				  TIM_OC2PolarityConfig(TIM2,TIM_ICPolarity_Falling);		//CC1P=1 设置为下降沿捕获
000098  2102              MOVS     r1,#2
00009a  0780              LSLS     r0,r0,#30
00009c  f7fffffe          BL       TIM_OC2PolarityConfig
;;;140              Rise[1]=TIM_GetCapture2(TIM2);
0000a0  f04f4080          MOV      r0,#0x40000000
0000a4  f7fffffe          BL       TIM_GetCapture2
0000a8  494f              LDR      r1,|L2.488|
0000aa  8048              STRH     r0,[r1,#2]
0000ac  e021              B        |L2.242|
                  |L2.174|
;;;141          }
;;;142    			else 
;;;143    			{
;;;144    				  TIM_OC2PolarityConfig(TIM2,TIM_ICPolarity_Rising); //CC1P=0 设置为上升沿捕获
0000ae  2100              MOVS     r1,#0
0000b0  f04f4080          MOV      r0,#0x40000000
0000b4  f7fffffe          BL       TIM_OC2PolarityConfig
;;;145              Drop[1]=TIM_GetCapture2(TIM2);
0000b8  f04f4080          MOV      r0,#0x40000000
0000bc  f7fffffe          BL       TIM_GetCapture2
0000c0  494a              LDR      r1,|L2.492|
0000c2  8048              STRH     r0,[r1,#2]
;;;146    				  if(Rise[1]>Drop[1])  RC_Pwm_In[1] = 65535-Rise[1] + Drop[1];
0000c4  4848              LDR      r0,|L2.488|
0000c6  8840              LDRH     r0,[r0,#2]  ; Rise
0000c8  8849              LDRH     r1,[r1,#2]  ; Drop
0000ca  4288              CMP      r0,r1
0000cc  dd0a              BLE      |L2.228|
0000ce  4846              LDR      r0,|L2.488|
0000d0  8840              LDRH     r0,[r0,#2]  ; Rise
0000d2  f64f71ff          MOV      r1,#0xffff
0000d6  1a08              SUBS     r0,r1,r0
0000d8  4944              LDR      r1,|L2.492|
0000da  8849              LDRH     r1,[r1,#2]  ; Drop
0000dc  4408              ADD      r0,r0,r1
0000de  4944              LDR      r1,|L2.496|
0000e0  8048              STRH     r0,[r1,#2]
                  |L2.226|
0000e2  e006              B        |L2.242|
                  |L2.228|
;;;147    					else 	               RC_Pwm_In[1] = Drop[1] - Rise[1];
0000e4  4841              LDR      r0,|L2.492|
0000e6  8840              LDRH     r0,[r0,#2]  ; Drop
0000e8  493f              LDR      r1,|L2.488|
0000ea  8849              LDRH     r1,[r1,#2]  ; Rise
0000ec  1a40              SUBS     r0,r0,r1
0000ee  4940              LDR      r1,|L2.496|
0000f0  8048              STRH     r0,[r1,#2]
                  |L2.242|
;;;148          }			
;;;149    		}	
;;;150    		
;;;151        if (TIM_GetITStatus(TIM2, TIM_IT_CC3) != RESET)            //捕获3发生捕获事件
0000f2  2108              MOVS     r1,#8
0000f4  06c8              LSLS     r0,r1,#27
0000f6  f7fffffe          BL       TIM_GetITStatus
0000fa  b370              CBZ      r0,|L2.346|
;;;152    		{	
;;;153    			TIM_ClearITPendingBit(TIM2, TIM_IT_CC3); //清除中断标志位
0000fc  2108              MOVS     r1,#8
0000fe  06c8              LSLS     r0,r1,#27
000100  f7fffffe          BL       TIM_ClearITPendingBit
;;;154    			if(GPIO_ReadInputDataBit(GPIO_TIM2,TIM2_CH3) == 1) 
000104  2104              MOVS     r1,#4
000106  4837              LDR      r0,|L2.484|
000108  f7fffffe          BL       GPIO_ReadInputDataBit
00010c  2801              CMP      r0,#1
00010e  d10a              BNE      |L2.294|
;;;155    			{
;;;156    				  TIM_OC3PolarityConfig(TIM2,TIM_ICPolarity_Falling);		//CC1P=1 设置为下降沿捕获
000110  2102              MOVS     r1,#2
000112  0780              LSLS     r0,r0,#30
000114  f7fffffe          BL       TIM_OC3PolarityConfig
;;;157              Rise[2]=TIM_GetCapture3(TIM2);
000118  f04f4080          MOV      r0,#0x40000000
00011c  f7fffffe          BL       TIM_GetCapture3
000120  4931              LDR      r1,|L2.488|
000122  8088              STRH     r0,[r1,#4]
000124  e021              B        |L2.362|
                  |L2.294|
;;;158          }
;;;159    			else 
;;;160    			{
;;;161    				  TIM_OC3PolarityConfig(TIM2,TIM_ICPolarity_Rising); //CC1P=0 设置为上升沿捕获
000126  2100              MOVS     r1,#0
000128  f04f4080          MOV      r0,#0x40000000
00012c  f7fffffe          BL       TIM_OC3PolarityConfig
;;;162              Drop[2]=TIM_GetCapture3(TIM2);
000130  f04f4080          MOV      r0,#0x40000000
000134  f7fffffe          BL       TIM_GetCapture3
000138  492c              LDR      r1,|L2.492|
00013a  8088              STRH     r0,[r1,#4]
;;;163    				  if(Rise[2]>Drop[2]) RC_Pwm_In[2] = 65535-Rise[2] + Drop[2];
00013c  482a              LDR      r0,|L2.488|
00013e  8880              LDRH     r0,[r0,#4]  ; Rise
000140  8889              LDRH     r1,[r1,#4]  ; Drop
000142  4288              CMP      r0,r1
000144  dd0a              BLE      |L2.348|
000146  4828              LDR      r0,|L2.488|
000148  8880              LDRH     r0,[r0,#4]  ; Rise
00014a  f64f71ff          MOV      r1,#0xffff
00014e  1a08              SUBS     r0,r1,r0
000150  4926              LDR      r1,|L2.492|
000152  8889              LDRH     r1,[r1,#4]  ; Drop
000154  4408              ADD      r0,r0,r1
000156  4926              LDR      r1,|L2.496|
000158  8088              STRH     r0,[r1,#4]
                  |L2.346|
00015a  e006              B        |L2.362|
                  |L2.348|
;;;164    					else 	              RC_Pwm_In[2] = Drop[2] - Rise[2];
00015c  4823              LDR      r0,|L2.492|
00015e  8880              LDRH     r0,[r0,#4]  ; Drop
000160  4921              LDR      r1,|L2.488|
000162  8889              LDRH     r1,[r1,#4]  ; Rise
000164  1a40              SUBS     r0,r0,r1
000166  4922              LDR      r1,|L2.496|
000168  8088              STRH     r0,[r1,#4]
                  |L2.362|
;;;165          }	 
;;;166    		}	
;;;167    
;;;168        if (TIM_GetITStatus(TIM2, TIM_IT_CC4) != RESET)            //捕获4发生捕获事件
00016a  2110              MOVS     r1,#0x10
00016c  0688              LSLS     r0,r1,#26
00016e  f7fffffe          BL       TIM_GetITStatus
000172  b370              CBZ      r0,|L2.466|
;;;169    		{	
;;;170    			TIM_ClearITPendingBit(TIM2, TIM_IT_CC4); //清除中断标志位
000174  2110              MOVS     r1,#0x10
000176  0688              LSLS     r0,r1,#26
000178  f7fffffe          BL       TIM_ClearITPendingBit
;;;171    		  if(GPIO_ReadInputDataBit(GPIO_TIM2,TIM2_CH4) == 1) 
00017c  2108              MOVS     r1,#8
00017e  4819              LDR      r0,|L2.484|
000180  f7fffffe          BL       GPIO_ReadInputDataBit
000184  2801              CMP      r0,#1
000186  d10a              BNE      |L2.414|
;;;172    			{
;;;173    				  TIM_OC4PolarityConfig(TIM2,TIM_ICPolarity_Falling);		//CC1P=1 设置为下降沿捕获
000188  2102              MOVS     r1,#2
00018a  0780              LSLS     r0,r0,#30
00018c  f7fffffe          BL       TIM_OC4PolarityConfig
;;;174              Rise[3]=TIM_GetCapture4(TIM2);
000190  f04f4080          MOV      r0,#0x40000000
000194  f7fffffe          BL       TIM_GetCapture4
000198  4913              LDR      r1,|L2.488|
00019a  80c8              STRH     r0,[r1,#6]
00019c  e021              B        |L2.482|
                  |L2.414|
;;;175          }
;;;176    			else 
;;;177    			{
;;;178    				  TIM_OC4PolarityConfig(TIM2,TIM_ICPolarity_Rising); //CC1P=0 设置为上升沿捕获
00019e  2100              MOVS     r1,#0
0001a0  f04f4080          MOV      r0,#0x40000000
0001a4  f7fffffe          BL       TIM_OC4PolarityConfig
;;;179              Drop[3]=TIM_GetCapture4(TIM2);
0001a8  f04f4080          MOV      r0,#0x40000000
0001ac  f7fffffe          BL       TIM_GetCapture4
0001b0  490e              LDR      r1,|L2.492|
0001b2  80c8              STRH     r0,[r1,#6]
;;;180    				  if(Rise[3]>Drop[3])  RC_Pwm_In[3] = 65535-Rise[3] + Drop[3];
0001b4  480c              LDR      r0,|L2.488|
0001b6  88c0              LDRH     r0,[r0,#6]  ; Rise
0001b8  88c9              LDRH     r1,[r1,#6]  ; Drop
0001ba  4288              CMP      r0,r1
0001bc  dd0a              BLE      |L2.468|
0001be  480a              LDR      r0,|L2.488|
0001c0  88c0              LDRH     r0,[r0,#6]  ; Rise
0001c2  f64f71ff          MOV      r1,#0xffff
0001c6  1a08              SUBS     r0,r1,r0
0001c8  4908              LDR      r1,|L2.492|
0001ca  88c9              LDRH     r1,[r1,#6]  ; Drop
0001cc  4408              ADD      r0,r0,r1
0001ce  4908              LDR      r1,|L2.496|
0001d0  80c8              STRH     r0,[r1,#6]
                  |L2.466|
0001d2  e006              B        |L2.482|
                  |L2.468|
;;;181    					else 	               RC_Pwm_In[3] = Drop[3] - Rise[3];
0001d4  4805              LDR      r0,|L2.492|
0001d6  88c0              LDRH     r0,[r0,#6]  ; Drop
0001d8  4903              LDR      r1,|L2.488|
0001da  88c9              LDRH     r1,[r1,#6]  ; Rise
0001dc  1a40              SUBS     r0,r0,r1
0001de  4904              LDR      r1,|L2.496|
0001e0  80c8              STRH     r0,[r1,#6]
                  |L2.482|
;;;182          }	  
;;;183    		}		
;;;184    }
0001e2  bd10              POP      {r4,pc}
;;;185    
                          ENDP

                  |L2.484|
                          DCD      0x40010800
                  |L2.488|
                          DCD      Rise
                  |L2.492|
                          DCD      Drop
                  |L2.496|
                          DCD      RC_Pwm_In

                          AREA ||i.TIM3_IRQHandler||, CODE, READONLY, ALIGN=2

                  TIM3_IRQHandler PROC
;;;199    /*====================================================================================================*/
;;;200    void TIM3_IRQHandler(void)
000000  b510              PUSH     {r4,lr}
;;;201    { 
;;;202        if (TIM_GetITStatus(TIM3, TIM_IT_CC1) != RESET)          //捕获1发生捕获事件
000002  2102              MOVS     r1,#2
000004  4862              LDR      r0,|L3.400|
000006  f7fffffe          BL       TIM_GetITStatus
00000a  b358              CBZ      r0,|L3.100|
;;;203    		{	
;;;204    			TIM_ClearITPendingBit(TIM3, TIM_IT_CC1);         //清除中断标志位
00000c  2102              MOVS     r1,#2
00000e  4860              LDR      r0,|L3.400|
000010  f7fffffe          BL       TIM_ClearITPendingBit
;;;205    			if(GPIO_ReadInputDataBit(GPIO_TIM3,TIM3_CH1) == 1) 
000014  2140              MOVS     r1,#0x40
000016  485f              LDR      r0,|L3.404|
000018  f7fffffe          BL       GPIO_ReadInputDataBit
00001c  2801              CMP      r0,#1
00001e  d109              BNE      |L3.52|
;;;206    			{
;;;207    				  TIM_OC1PolarityConfig(TIM3,TIM_ICPolarity_Falling);		//CC1P=1 设置为下降沿捕获
000020  2102              MOVS     r1,#2
000022  485b              LDR      r0,|L3.400|
000024  f7fffffe          BL       TIM_OC1PolarityConfig
;;;208              Rise[4]=TIM_GetCapture1(TIM3);
000028  4859              LDR      r0,|L3.400|
00002a  f7fffffe          BL       TIM_GetCapture1
00002e  495a              LDR      r1,|L3.408|
000030  8108              STRH     r0,[r1,#8]
000032  e01f              B        |L3.116|
                  |L3.52|
;;;209          }
;;;210    			else 
;;;211    			{
;;;212    				  TIM_OC1PolarityConfig(TIM3,TIM_ICPolarity_Rising);        //CC1P=0 设置为上升沿捕获
000034  2100              MOVS     r1,#0
000036  4856              LDR      r0,|L3.400|
000038  f7fffffe          BL       TIM_OC1PolarityConfig
;;;213              Drop[4]=TIM_GetCapture1(TIM3);
00003c  4854              LDR      r0,|L3.400|
00003e  f7fffffe          BL       TIM_GetCapture1
000042  4956              LDR      r1,|L3.412|
000044  8108              STRH     r0,[r1,#8]
;;;214    				  if(Rise[4]>Drop[4])  RC_Pwm_In[4] = 65535-Rise[4] + Drop[4];
000046  4854              LDR      r0,|L3.408|
000048  8900              LDRH     r0,[r0,#8]  ; Rise
00004a  8909              LDRH     r1,[r1,#8]  ; Drop
00004c  4288              CMP      r0,r1
00004e  dd0a              BLE      |L3.102|
000050  4851              LDR      r0,|L3.408|
000052  8900              LDRH     r0,[r0,#8]  ; Rise
000054  f64f71ff          MOV      r1,#0xffff
000058  1a08              SUBS     r0,r1,r0
00005a  4950              LDR      r1,|L3.412|
00005c  8909              LDRH     r1,[r1,#8]  ; Drop
00005e  4408              ADD      r0,r0,r1
000060  494f              LDR      r1,|L3.416|
000062  8108              STRH     r0,[r1,#8]
                  |L3.100|
000064  e006              B        |L3.116|
                  |L3.102|
;;;215    					else 	               RC_Pwm_In[4] = Drop[4] - Rise[4];
000066  484d              LDR      r0,|L3.412|
000068  8900              LDRH     r0,[r0,#8]  ; Drop
00006a  494b              LDR      r1,|L3.408|
00006c  8909              LDRH     r1,[r1,#8]  ; Rise
00006e  1a40              SUBS     r0,r0,r1
000070  494b              LDR      r1,|L3.416|
000072  8108              STRH     r0,[r1,#8]
                  |L3.116|
;;;216          }			
;;;217    		}	
;;;218    	  
;;;219    	if (TIM_GetITStatus(TIM3, TIM_IT_CC2) != RESET)    //捕获2发生捕获事件
000074  2104              MOVS     r1,#4
000076  4846              LDR      r0,|L3.400|
000078  f7fffffe          BL       TIM_GetITStatus
00007c  b358              CBZ      r0,|L3.214|
;;;220    		{	
;;;221    			TIM_ClearITPendingBit(TIM3, TIM_IT_CC2);   //清除中断标志位
00007e  2104              MOVS     r1,#4
000080  4843              LDR      r0,|L3.400|
000082  f7fffffe          BL       TIM_ClearITPendingBit
;;;222    			if(GPIO_ReadInputDataBit(GPIO_TIM3,TIM3_CH2) == 1) 
000086  2180              MOVS     r1,#0x80
000088  4842              LDR      r0,|L3.404|
00008a  f7fffffe          BL       GPIO_ReadInputDataBit
00008e  2801              CMP      r0,#1
000090  d109              BNE      |L3.166|
;;;223    			{
;;;224    				  TIM_OC2PolarityConfig(TIM3,TIM_ICPolarity_Falling);		//CC1P=1 设置为下降沿捕获
000092  2102              MOVS     r1,#2
000094  483e              LDR      r0,|L3.400|
000096  f7fffffe          BL       TIM_OC2PolarityConfig
;;;225              Rise[5]=TIM_GetCapture2(TIM3);
00009a  483d              LDR      r0,|L3.400|
00009c  f7fffffe          BL       TIM_GetCapture2
0000a0  493d              LDR      r1,|L3.408|
0000a2  8148              STRH     r0,[r1,#0xa]
0000a4  e01f              B        |L3.230|
                  |L3.166|
;;;226          }
;;;227    			else 
;;;228    			{
;;;229    				  TIM_OC2PolarityConfig(TIM3,TIM_ICPolarity_Rising);        //CC1P=0 设置为上升沿捕获
0000a6  2100              MOVS     r1,#0
0000a8  4839              LDR      r0,|L3.400|
0000aa  f7fffffe          BL       TIM_OC2PolarityConfig
;;;230              Drop[5]=TIM_GetCapture2(TIM3);
0000ae  4838              LDR      r0,|L3.400|
0000b0  f7fffffe          BL       TIM_GetCapture2
0000b4  4939              LDR      r1,|L3.412|
0000b6  8148              STRH     r0,[r1,#0xa]
;;;231    				  if(Rise[5]>Drop[5])  RC_Pwm_In[5] = 65535-Rise[5] + Drop[5];
0000b8  4837              LDR      r0,|L3.408|
0000ba  8940              LDRH     r0,[r0,#0xa]  ; Rise
0000bc  8949              LDRH     r1,[r1,#0xa]  ; Drop
0000be  4288              CMP      r0,r1
0000c0  dd0a              BLE      |L3.216|
0000c2  4835              LDR      r0,|L3.408|
0000c4  8940              LDRH     r0,[r0,#0xa]  ; Rise
0000c6  f64f71ff          MOV      r1,#0xffff
0000ca  1a08              SUBS     r0,r1,r0
0000cc  4933              LDR      r1,|L3.412|
0000ce  8949              LDRH     r1,[r1,#0xa]  ; Drop
0000d0  4408              ADD      r0,r0,r1
0000d2  4933              LDR      r1,|L3.416|
0000d4  8148              STRH     r0,[r1,#0xa]
                  |L3.214|
0000d6  e006              B        |L3.230|
                  |L3.216|
;;;232    					else 	               RC_Pwm_In[5] = Drop[5] - Rise[5];
0000d8  4830              LDR      r0,|L3.412|
0000da  8940              LDRH     r0,[r0,#0xa]  ; Drop
0000dc  492e              LDR      r1,|L3.408|
0000de  8949              LDRH     r1,[r1,#0xa]  ; Rise
0000e0  1a40              SUBS     r0,r0,r1
0000e2  492f              LDR      r1,|L3.416|
0000e4  8148              STRH     r0,[r1,#0xa]
                  |L3.230|
;;;233          }			
;;;234    		}	
;;;235    		
;;;236    	 if (TIM_GetITStatus(TIM3, TIM_IT_CC3) != RESET)   //捕获3发生捕获事件
0000e6  2108              MOVS     r1,#8
0000e8  4829              LDR      r0,|L3.400|
0000ea  f7fffffe          BL       TIM_GetITStatus
0000ee  2800              CMP      r0,#0
0000f0  d04c              BEQ      |L3.396|
;;;237    		{	
;;;238    			TIM_ClearITPendingBit(TIM3, TIM_IT_CC3);   //清除中断标志位
0000f2  2108              MOVS     r1,#8
0000f4  4826              LDR      r0,|L3.400|
0000f6  f7fffffe          BL       TIM_ClearITPendingBit
;;;239    			if(GPIO_ReadInputDataBit(GPIOB,GPIO_Pin_0) == 1) 
0000fa  2101              MOVS     r1,#1
0000fc  4829              LDR      r0,|L3.420|
0000fe  f7fffffe          BL       GPIO_ReadInputDataBit
000102  2801              CMP      r0,#1
000104  d109              BNE      |L3.282|
;;;240    			{
;;;241    				TIM_OC3PolarityConfig(TIM3,TIM_ICPolarity_Falling);		//CC1P=1 设置为下降沿捕获
000106  2102              MOVS     r1,#2
000108  4821              LDR      r0,|L3.400|
00010a  f7fffffe          BL       TIM_OC3PolarityConfig
;;;242    				Rise[6]=TIM_GetCapture3(TIM3);
00010e  4820              LDR      r0,|L3.400|
000110  f7fffffe          BL       TIM_GetCapture3
000114  4920              LDR      r1,|L3.408|
000116  8188              STRH     r0,[r1,#0xc]
000118  e038              B        |L3.396|
                  |L3.282|
;;;243          }
;;;244    			else 
;;;245    			{
;;;246    				TIM_OC3PolarityConfig(TIM3,TIM_ICPolarity_Rising);      //CC1P=0 设置为上升沿捕获
00011a  2100              MOVS     r1,#0
00011c  481c              LDR      r0,|L3.400|
00011e  f7fffffe          BL       TIM_OC3PolarityConfig
;;;247    				Drop[6]=TIM_GetCapture3(TIM3);
000122  481b              LDR      r0,|L3.400|
000124  f7fffffe          BL       TIM_GetCapture3
000128  491c              LDR      r1,|L3.412|
00012a  8188              STRH     r0,[r1,#0xc]
;;;248    				if(Rise[6]>Drop[6])  US100_Alt_Temp = 65535-Rise[6] + Drop[6];
00012c  481a              LDR      r0,|L3.408|
00012e  8980              LDRH     r0,[r0,#0xc]  ; Rise
000130  8989              LDRH     r1,[r1,#0xc]  ; Drop
000132  4288              CMP      r0,r1
000134  dd0a              BLE      |L3.332|
000136  4818              LDR      r0,|L3.408|
000138  8980              LDRH     r0,[r0,#0xc]  ; Rise
00013a  f64f71ff          MOV      r1,#0xffff
00013e  1a08              SUBS     r0,r1,r0
000140  4916              LDR      r1,|L3.412|
000142  8989              LDRH     r1,[r1,#0xc]  ; Drop
000144  4408              ADD      r0,r0,r1
000146  4918              LDR      r1,|L3.424|
000148  8008              STRH     r0,[r1,#0]
00014a  e006              B        |L3.346|
                  |L3.332|
;;;249    				else 	               US100_Alt_Temp = Drop[6] - Rise[6];
00014c  4813              LDR      r0,|L3.412|
00014e  8980              LDRH     r0,[r0,#0xc]  ; Drop
000150  4911              LDR      r1,|L3.408|
000152  8989              LDRH     r1,[r1,#0xc]  ; Rise
000154  1a40              SUBS     r0,r0,r1
000156  4914              LDR      r1,|L3.424|
000158  8008              STRH     r0,[r1,#0]
                  |L3.346|
;;;250    
;;;251    				if(US100_Alt_Temp>10000)   US100_Alt_Temp=Alt_Last; 
00015a  4813              LDR      r0,|L3.424|
00015c  8800              LDRH     r0,[r0,#0]  ; US100_Alt_Temp
00015e  f2427110          MOV      r1,#0x2710
000162  4288              CMP      r0,r1
000164  dd04              BLE      |L3.368|
000166  4811              LDR      r0,|L3.428|
000168  8800              LDRH     r0,[r0,#0]  ; Alt_Last
00016a  490f              LDR      r1,|L3.424|
00016c  8008              STRH     r0,[r1,#0]
00016e  e003              B        |L3.376|
                  |L3.368|
;;;252    				else    					       Alt_Last=US100_Alt_Temp; 
000170  480d              LDR      r0,|L3.424|
000172  8800              LDRH     r0,[r0,#0]  ; US100_Alt_Temp
000174  490d              LDR      r1,|L3.428|
000176  8008              STRH     r0,[r1,#0]
                  |L3.376|
;;;253    
;;;254    				Alt_CuntTmep2=Alt_CuntTmep1;        //滑动平均滤波
000178  480d              LDR      r0,|L3.432|
00017a  6800              LDR      r0,[r0,#0]  ; Alt_CuntTmep1
00017c  490d              LDR      r1,|L3.436|
00017e  6008              STR      r0,[r1,#0]  ; Alt_CuntTmep2
;;;255    				Alt_CuntTmep1=US100_Alt_Temp;//*((float)cos(angle.pitch/57.295779f))*((float)cos(angle.roll/57.295779f));        //姿态补偿
000180  4809              LDR      r0,|L3.424|
000182  8800              LDRH     r0,[r0,#0]  ; US100_Alt_Temp
000184  f7fffffe          BL       __aeabi_ui2f
000188  4909              LDR      r1,|L3.432|
00018a  6008              STR      r0,[r1,#0]  ; Alt_CuntTmep1
                  |L3.396|
;;;256    
;;;257    				//US100_Alt=((Alt_CuntTmep1+Alt_CuntTmep2)/2)*34/2000;  //转化为CM
;;;258    
;;;259    // 				Alt_V_CuntTmep2=Alt_V_CuntTmep1;//滑动平均滤波
;;;260    // 				Alt_V_CuntTmep1=(US100_Alt-US100_Alt_Last)/ 2;   //除以0.05s获得速度单位：m/S 
;;;261    
;;;262    // 				US100_Alt_V= (Alt_V_CuntTmep1+Alt_V_CuntTmep2)/2;   
;;;263    // 				US100_Alt_Last=US100_Alt; 
;;;264    // 				fff=1;
;;;265          }			
;;;266    		}	
;;;267    }
00018c  bd10              POP      {r4,pc}
;;;268    
                          ENDP

00018e  0000              DCW      0x0000
                  |L3.400|
                          DCD      0x40000400
                  |L3.404|
                          DCD      0x40010800
                  |L3.408|
                          DCD      Rise
                  |L3.412|
                          DCD      Drop
                  |L3.416|
                          DCD      RC_Pwm_In
                  |L3.420|
                          DCD      0x40010c00
                  |L3.424|
                          DCD      US100_Alt_Temp
                  |L3.428|
                          DCD      Alt_Last
                  |L3.432|
                          DCD      Alt_CuntTmep1
                  |L3.436|
                          DCD      Alt_CuntTmep2

                          AREA ||.bss||, DATA, NOINIT, ALIGN=1

                  Rise
                          %        14
                  Drop
                          %        14
                  RC_Pwm_In
                          %        16
                  RC_Pwm_In_his
                          %        16

                          AREA ||.data||, DATA, ALIGN=2

                  US100_Alt_Temp
000000  0000              DCW      0x0000
                  Alt_Last
000002  0000              DCW      0x0000
                  Alt_CuntTmep1
000004  00000000          DCFS     0x00000000 ; 0
                  Alt_CuntTmep2
000008  00000000          DCFS     0x00000000 ; 0
                  Alt_V_CuntTmep1
00000c  00000000          DCFS     0x00000000 ; 0
                  Alt_V_CuntTmep2
000010  00000000          DCFS     0x00000000 ; 0
                  US100_Alt_Last
000014  00000000          DCFS     0x00000000 ; 0
